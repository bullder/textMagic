{% extends 'base.html.twig' %}

{% block title %}Test{% endblock %}

{% block body %}
        <form action="{{ path('result', {'id': test.id}) }}" method="post" class="list-group list-group-checkable" id="test-form">
            {% for question in test.questions|shuffle %}
                <div>
                    <p>Question {{ loop.index }}.</p>
                    <p>{{ question.text }}</p>
                    {% for answer in question.answers %}
                        <input class="list-group-item-check pe-none" type="radio" name="{{ question.id }}" id="{{ answer.id }}"  value="{{ answer.id }}">
                        <label class="list-group-item rounded-3 py-3" for="{{ answer.id }}">
                            {{ answer.text }}
                        </label>
                    {% endfor %}
                    <hr />
                </div>
            {% endfor %}
            <button type="reset" class="btn">Reset</button>
            <button type="submit" class="btn btn-primary">Submit</button>
        </form>
{% endblock %}


{% block js %}
    <script>
        document.getElementById('test-form').addEventListener('submit', function(event) {
            let allAnswered = true;
            const questions = document.querySelectorAll('input[type="radio"]');
            const questionGroups = {};
            let firstUnansweredElement = null;

            questions.forEach(function(question) {
                if (!questionGroups[question.name]) {
                    questionGroups[question.name] = false;
                }
                if (question.checked) {
                    questionGroups[question.name] = true;
                }
            });

            for (const question in questionGroups) {
                if (!questionGroups[question]) {
                    allAnswered = false;
                    if (!firstUnansweredElement) {
                        firstUnansweredElement = document.querySelector(`input[name="${question}"]`);
                    }
                }
            }

            if (!allAnswered) {
                event.preventDefault();
                if (firstUnansweredElement) {
                    firstUnansweredElement.scrollIntoView({ behavior: 'smooth', block: 'center' });
                }
                alert('Please answer all questions before submitting.');
            }
        });
    </script>
    <style>
        .list-group {
            min-width: 480px;
            margin-inline: 1.5rem;
        }

        .list-group label {
            margin: 5px 0;
        }

        .form-check-input:checked + .form-checked-content {
            opacity: .5;
        }

        .form-check-input-placeholder {
            border-style: dashed;
        }
        [contenteditable]:focus {
            outline: 0;
        }

        .list-group-checkable .list-group-item {
            cursor: pointer;
        }
        .list-group-item-check {
            position: absolute;
            clip: rect(0, 0, 0, 0);
        }
        .list-group-item-check:hover + .list-group-item {
            background-color: #e9ecef;
        }
        .list-group-item-check:checked + .list-group-item {
            color: #fff;
            background-color: #0d6efd;
            border-color: #0d6efd;
        }
        .list-group-item-check[disabled] + .list-group-item,
        .list-group-item-check:disabled + .list-group-item {
            pointer-events: none;
            filter: none;
            opacity: .5;
        }

        .list-group-radio .list-group-item {
            cursor: pointer;
            border-radius: .5rem;
        }
        .list-group-radio .form-check-input {
            z-index: 2;
            margin-top: -.5em;
        }
        .list-group-radio .list-group-item:hover,
        .list-group-radio .list-group-item:focus {
            background-color: #e9ecef;
        }

        .list-group-radio .form-check-input:checked + .list-group-item {
            border-color: #0d6efd;
            box-shadow: 0 0 0 2px #0d6efd;
        }
        .list-group-radio .form-check-input[disabled] + .list-group-item,
        .list-group-radio .form-check-input:disabled + .list-group-item {
            pointer-events: none;
            filter: none;
            opacity: .5;
        }
    </style>
{% endblock %}
